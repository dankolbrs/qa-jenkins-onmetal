// *******************************
stage 'Pre-Deployment'
// *******************************

echo 'Provisioning an onMetal server and preparing it to run OSA'
node('onmetal-provisioner') {
    
    String home = '/home/ubuntu/qa-jenkins-onmetal/'
    String onmetal_ip

    // Spin onMetal Server
    sh '''
    cd /home/ubuntu/qa-jenkins-onmetal/
    sudo ansible-playbook build_onmetal.yaml --tags 'iad'
    '''
    // Verify onMetal server data
    sh '''
    cd /home/ubuntu/qa-jenkins-onmetal/
    sudo ansible-playbook -i hosts get_onmetal_facts.yaml --tags 'iad'
    '''
    // Get server IP address
    String hosts = readFile("${home}hosts")
    onmetal_ip = hosts.substring(hosts.indexOf('=')+1)
    // Wait for server to become active
    wait_for_ping(onmetal_ip)

    retry(5) {
        // Prepare OnMetal server
        sh """
        cd ${home}
        sudo ansible-playbook -i hosts prepare_onmetal.yaml
        """ 
        // Sleep 3 seconds before trying again
        sleep 3
    }

    // Apply CPU fix - will restart server (~5 min)
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts set_onmetal_cpu.yaml
    """ 
    
    // Wait for the server to com back online
    wait_for_ping(onmetal_ip)

    // Configure VMs onMetal server
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts configure_onmetal.yaml
    """

    // Create VMs where OSA will be deployed
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts create_lab.yaml
    """

    // Prepare each VM for OSA installation
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts prepare_for_osa.yaml
    """

}


// *******************************
stage 'Deployment'
// *******************************

echo "Deploying OpenStack using OSA"
node('onmetal-provisioner') {

    // Deploy OpenStack
    sh """
    cd ${home}    
    sudo ansible-playbook -i hosts deploy_osa.yaml
    """

}


// *******************************
stage 'Post-Deployment Validation'
// *******************************
stage 'Upgrade'
// *******************************
stage 'Post-Upgrade Validation'
// *******************************
stage 'Reporting'
// *******************************


// *******************************
stage 'Clean Up'
// *******************************
echo 'Provisioning an onMetal server and preparing it to run OSA'
node('onmetal-provisioner') {
    //TBD
    String home = '/home/ubuntu/qa-jenkins-onmetal/'

    sh """
    cd ${home}
    sudo ansible-playbook -i hosts destroy_virtual_machines.yaml
    """
    
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts destroy_virtual_networks.yaml
    """
    
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts destroy_lab_state_file.yaml
    """
    
    sh """
    cd ${home}
    sudo ansible-playbook -i hosts destroy_onmetal.yaml --tags 'iad'
    """
}


def wait_for_ping(ip) {
    
    echo "Waiting for the host with IP:${ip} to become online."
    def response
    def current_time
    int timeout = 360
    def initial_time = sh returnStdout: true, script: 'date +%s'
    waitUntil {
        current_time = sh returnStdout: true, script: 'date +%s'
        if (current_time.toInteger() - initial_time.toInteger() > timeout) {
            error "The host did not respond to ping within the timeout of ${timeout} seconds"
        }
        response = sh returnStatus: true, script: "ping -q -c 1 ${ip}"
        return (response == 0) 
    }
    
}   